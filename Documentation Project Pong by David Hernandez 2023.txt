Documentation Project Pong by David Hernández 2023

This project was carried out with the purpose of making the famous Pong game using Python as programming language.

The Turtle library was used to make the game.

Window Creation
Title, color, size and refresh

wn = turtle.Screen()                            
wn.title("Pong by David Hernández")
wn.bgcolor("blue")
wn.setup(width=800, height=600)
wn.tracer(0)

Scoreboard variables
marcadorA = 0
marcadorB = 0

Object Attributes: jugadorA
Speed, form, color, coordinates location, size, for Player A

jugadorA = turtle.Turtle()
jugadorA.speed(6)
jugadorA.shape("square")
jugadorA.color("white")
jugadorA.penup()
jugadorA.goto(-350, 0)
jugadorA.shapesize(stretch_len=1, stretch_wid=5)

Object Attributes: jugadorB
Speed, form, color, coordinates location, size, for Player B

jugadorB = turtle.Turtle()
jugadorB.speed(6)
jugadorB.shape("square")
jugadorB.color("white")
jugadorB.penup()
jugadorB.goto(350, 0)
jugadorB.shapesize(stretch_len=1, stretch_wid=5)

Object Attributes: Ball
Speed, form, color, coordinates location for ball

pelota = turtle.Turtle()
pelota.speed(0)
pelota.shape("square")
pelota.color("white")
pelota.penup()
pelota.goto(0,0)
pelota.dx = 1
pelota.dy = 1

Object Attributes: Division
Color, coordinates location for line división in screen.

division = turtle.Turtle()
division.color("white")
division.goto(0,400)
division.goto(0,-400)

Object Attributes: Scoreboard
Speed when change scoreboard, 

pen = turtle.Turtle()
pen.speed(0)
pen.color("white")
pen.penup()
pen.hideturtle()
pen.goto(0, 260)
pen.write("Jugador A: 0     Jugador B: 0", align="center", font=("Courier", 25, "normal"))


Player controls
Player pixel movement, Define keys for control

def jugadorA_up():
    y = jugadorA.ycor()
    y += 20
    jugadorA.sety(y)

def jugadorA_down():
    y = jugadorA.ycor()
    y -= 20
    jugadorA.sety(y)

def jugadorB_up():
    y = jugadorB.ycor()
    y += 20
    jugadorB.sety(y)

def jugadorB_down():
    y = jugadorB.ycor()
    y -= 20
    jugadorB.sety(y)

wn.listen()
wn.onkeypress(jugadorA_up, "w")
wn.onkeypress(jugadorA_down, "s")
wn.onkeypress(jugadorB_up, "Up")
wn.onkeypress(jugadorB_down, "Down")


Main Game Loop
Ball collision on screen edges, ball collision with players, scoreboard refresh.

while True:
    wn.update()

    pelota.setx(pelota.xcor() + pelota.dx)
    pelota.sety(pelota.ycor() + pelota.dy)

    if pelota.ycor() > 290:
        pelota.dy *= -1
    if pelota.ycor() < -290:
        pelota.dy *= -1

    if pelota.xcor() > 390:
        pelota.goto(0,0)
        pelota.dx *= -1
        marcadorA += 1
        pen.clear()

        pen.write(f"Jugador A: {marcadorA}      Jugador B: {marcadorB}", align="center", font=("Courier", 25, "normal"))

    if pelota.xcor() < -390:
        pelota.goto(0,0)
        pelota.dx *= -1
        marcadorB += 1
        pen.clear()

        pen. write (f"Jugador A:  {marcadorA}   Jugador B: {marcadorB}", align="center", font=("Courier", 25, "normal"))

    if ((pelota.xcor() > 340 and pelota.xcor() < 350)
            and (pelota.ycor() < jugadorB.ycor() + 50
            and pelota.ycor() > jugadorB.ycor() - 50)):
        pelota.dx *= -1

    if ((pelota.xcor() < -340 and pelota.xcor() > -350)
            and (pelota.ycor() < jugadorA.ycor() +50
            and pelota.ycor() > jugadorA.ycor() - 50)):
        pelota.dx *= -1




References:

turtle — Gráficos con Turtle — documentación de Python - 3.9.14

https://docs.python.org/es/3.9/library/turtle.html